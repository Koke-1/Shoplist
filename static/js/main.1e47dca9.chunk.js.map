{"version":3,"sources":["Components/RandomSVG.js","Local API/Recipes.js","Components/RecipeDashBoard.js","Components/HomePage.js","Components/SearchBar.js","index.js"],"names":["RandomSVG","Loading","setLoading","useEffect","potato","document","querySelector","style","pan","chicken","bean","setInterval","stroke","setTimeout","className","xmlns","viewBox","preserveAspectRatio","x","y","id","fill","strokeWidth","d","Recipes","Recipe","Description","Instructions","Ingredients","RecipeDashBoard","info","map","data","console","log","index","array","HomePage","recentRecipes","splice","length","useState","number","setNumber","test","Math","floor","random","toString","split","clearInterval","SearchBar","Bar","setBar","Info","setInfo","DropMenu","setDropMenu","undefined","onSubmit","e","preventDefault","onClick","placeholder","onInput","ingredient","target","value","foundRecipes","filter","ingredients","includes","key","arr","input","information","Main","ReactDOM","render"],"mappings":"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","file":"static/js/main.1e47dca9.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\n\r\nexport default function RandomSVG({Loading,setLoading}) {\r\n  useEffect(() => {\r\n    const potato = document.querySelector(\"#Potato\").style\r\n    const pan = document.querySelector(\"#Pan\").style\r\n    const chicken = document.querySelector(\"#Chicken\").style\r\n    const bean = document.querySelector(\"#Bean\").style\r\n\r\n    setInterval(()=>{\r\n      pan.stroke =\"rgb(82, 2, 2)\"\r\n      potato.stroke = \"rgb(82, 2, 2)\"\r\n      chicken.stroke = \"rgb(82, 2, 2)\"\r\n      bean.stroke = \"rgb(82, 2, 2)\"\r\n      setTimeout(() => {\r\n        pan.stroke = \"red\"\r\n        setTimeout(() => {\r\n          chicken.stroke = \"red\"\r\n          setTimeout(() => {\r\n            bean.stroke = \"red\"\r\n            setTimeout(() => {\r\n              potato.stroke=\"red\"\r\n              setTimeout(()=>{\r\n                setLoading(!Loading)\r\n              },4600)\r\n            }, 250);\r\n          }, 250);\r\n        },250);\r\n      }, 500);\r\n    },3000)\r\n\r\n\r\n\r\n    \r\n  }, [])\r\n\r\n    return (\r\n      <div className=\"SVG\" >    \r\n        <svg className=\"svg\" stroke=\"red\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1570 948\" preserveAspectRatio=\"xMinYMid meet\" >\r\n          <text x=\"200\" y=\"-150\" ><tspan className=\"The\" >The</tspan><tspan className=\"Recipe\" >Recipe</tspan><tspan className=\"Book\" >Book</tspan>  </text>\r\n          <path id=\"Pan\"\r\n            fill=\"none\" strokeWidth=\"12\"\r\n        d=\"M 966.08,473.84\r\n           C 927.54,473.49 832.54,472.64 737.00,471.77\r\n             611.22,470.64 484.50,469.50 484.50,469.50\r\n             484.50,469.50 491.00,698.00 504.00,697.00\r\n             504.00,697.00 553.07,721.78 621.00,724.00\r\n             698.23,726.53 799.43,724.55 871.00,724.00\r\n             931.43,723.54 971.99,702.82 963.00,696.00\r\n             963.00,696.00 985.25,576.88 984.42,508.74\r\n             984.30,499.06 1162.48,503.82 1177.18,498.55\r\n             1194.38,492.38 1179.00,475.50 1179.00,475.50\r\n             1179.00,475.50 977.54,473.94 966.08,473.84 Z\" />\r\n            <path id=\"Chicken\"\r\n              fill=\"none\" stroke=\"red\" strokeWidth=\"12\"\r\n        d=\"M 537.82,270.73\r\n           C 537.82,270.73 519.15,276.73 519.15,276.73\r\n             519.15,276.73 528.48,291.73 528.48,291.73\r\n             528.48,291.73 508.82,295.73 508.82,295.73\r\n             508.82,295.73 516.07,308.98 516.07,308.98\r\n             516.07,308.98 536.57,309.73 536.57,309.73\r\n             536.57,309.73 551.32,319.73 551.32,319.73\r\n             551.32,319.73 554.82,352.73 554.82,352.73\r\n             554.82,352.73 555.15,381.73 555.15,381.73\r\n             555.15,381.73 578.82,399.06 578.82,399.06\r\n             578.82,399.06 614.48,413.73 614.82,414.06\r\n             615.15,414.39 656.82,407.39 656.82,407.39\r\n             656.82,407.39 685.15,393.73 685.15,393.73\r\n             685.15,393.73 696.48,371.73 696.48,371.73\r\n             696.48,371.73 680.48,338.73 680.15,338.73\r\n             679.82,338.73 660.48,314.39 660.48,314.39\r\n             660.48,314.39 630.67,300.67 629.67,300.33\r\n             628.67,300.00 602.00,296.00 602.00,296.00\r\n             602.00,296.00 580.48,297.39 580.48,297.39\r\n             580.48,297.39 565.45,301.64 565.45,301.64\r\n             565.45,301.64 548.69,287.48 548.69,287.35\r\n             548.69,287.23 537.82,270.73 537.82,270.73 Z\" />\r\n             <path id=\"Bean\"\r\n        fill=\"none\" stroke=\"red\" strokeWidth=\"12\"\r\n        d=\"M 924.00,278.00\r\n           C 916.15,269.89 901.00,269.00 901.00,269.00\r\n             901.00,269.00 882.32,271.03 874.67,279.67\r\n             866.82,288.53 870.00,304.00 870.00,304.00\r\n             870.00,304.00 873.00,318.55 881.67,324.67\r\n             889.99,330.55 904.00,328.00 904.00,328.00\r\n             904.00,328.00 917.66,326.60 924.67,319.33\r\n             931.14,312.63 931.00,300.00 931.00,300.00\r\n             931.00,300.00 931.12,285.36 924.00,278.00 Z\" />\r\n             <path id=\"Potato\"\r\n        fill=\"none\" stroke=\"red\" strokeWidth=\"12\"\r\n        d=\"M 654.00,115.50\r\n           C 654.00,115.50 618.00,160.50 618.00,160.50\r\n             618.00,160.50 658.50,189.00 658.50,189.00\r\n             658.50,189.00 714.00,160.50 714.00,160.50\r\n             714.00,160.50 654.00,115.50 654.00,115.50 Z\r\n           M 837.00,265.50\" />\r\n        </svg>\r\n        </div>\r\n\r\n    )\r\n}\r\n"," const Recipes = [\r\n\r\n    {\r\n        Recipe:\"Eggs and Potato\",\r\n        Description:\"Stirred eggs with fried potato\",\r\n        Instructions:[\"Cut Potato into thin pieces for it to cook from the inside better and faster\",\r\n                      \"Add enough oil to cover the potato, once it's hot enough put in the cut potato\",\r\n                      \"Stir the potato till you can pierce it with your utensil with ease \",\r\n                      \"Remove oil, place oil in a metal container then add egg into the pan with the potato and stir into the egg is cooked\"],\r\n        Ingredients:[\r\n            \"Egg\",\"Potato\"\r\n        ]\r\n    },\r\n    {\r\n        Recipe:\"Beef Stew\",\r\n        Description:\"\",\r\n        Instructions:[],\r\n        Ingredients:[\r\n            \"Beef\",\"Potato\",\"Tomato Broth\",\"Water\",\"Onion\",\"Garlic\"\r\n        ]\r\n    },\r\n    {\r\n        Recipe:\"Enfrijoladas\",\r\n        Description:\"\",\r\n        Instructions:[],\r\n        Ingredients:[\r\n            \"Bean\",\"Tortilla\",\"Cheese\"\r\n        ]\r\n    },\r\n    {\r\n        Recipe:\"Quesadilla\",\r\n        Description:\"\",\r\n        Instructions:[],\r\n        Ingredients:[\r\n            \"Cheese\",\"Tortilla\",\r\n        ]\r\n    },\r\n    {\r\n        Recipe:\"Fried Eggs\",\r\n        Description:\"\",\r\n        Instructions:[],\r\n        Ingredients:[\r\n            \"Egg\"\r\n        ]\r\n    },\r\n    {\r\n        Recipe:\"Mexican Rice\",\r\n        Description:\"\",\r\n        Instructions:[],\r\n        Ingredients:[\r\n            \"Rice\",\"Tomato Broth\",\"Oil\",\"Chicken Broth\"\r\n        ]\r\n    }\r\n\r\n\r\n    \r\n]\r\nexport default Recipes","import React from 'react'\r\n\r\nexport default function RecipeDashBoard({info}) {\r\n    return (\r\n        <article className=\"Board\" >\r\n            {\r\n                info.map((data)=>{\r\n                    console.log(data);\r\n                    return (\r\n                        <>\r\n                        <div className=\"RecipeName\">\r\n                            <div>{data.Recipe}</div>\r\n                        </div>\r\n                        \r\n                        <div className=\"Ingredients\">\r\n                            \r\n                            <div className=\"Required\" >Ingredients:</div>\r\n                            <div className=\"Holder\" >\r\n                        {data.Ingredients.map((info)=>{\r\n                            return(\r\n                            <div className=\"Ingredient\" >\r\n                                {info}\r\n                            </div> ) \r\n                        })}\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"Description\" >\r\n                            <h3 className=\"Title\" >Description</h3>\r\n                            <hr></hr>\r\n                            <div className=\"Info\" >{data.Description}</div></div>\r\n                        <div className=\"Instruction\" >\r\n                            <div className=\"Ing_Holder\" >\r\n                            <h1>Instructions</h1>\r\n                        {\r\n                            data.Instructions.map((info,index,array)=>{\r\n                                return (\r\n                                    <div >Step {index + 1 } : {info}</div>\r\n                                )\r\n                            })\r\n                        }\r\n                        </div>\r\n                        </div>\r\n                        </>\r\n                        \r\n                    )\r\n                })\r\n            }\r\n        </article>\r\n    )\r\n}\r\n","import React,{useState,useEffect} from 'react'\r\nimport Recipes from '../Local API/Recipes'\r\n\r\nexport default function HomePage() {\r\n    const recentRecipes = [...Recipes].splice(Recipes.length - 3,Recipes.length)\r\n    const [number, setNumber] = useState([])\r\n    useEffect(() => {\r\n        \r\n        const test = setInterval(() => {\r\n         let randoms = Math.floor(Math.random() * (99 - 10 + 1 ) + 10 )\r\n          const string = randoms.toString()\r\n          const array = string.split(\"\")\r\n            setNumber(array)  \r\n        }, 1);\r\n        setTimeout(() => {\r\n            const recipe = Recipes.length + 1\r\n            const string = recipe.toString()\r\n            const array = string.split(\"\")\r\n           clearInterval(test)\r\n           setNumber(array)\r\n           \r\n        }, 3000);\r\n        \r\n        \r\n    }, [])\r\n    return (\r\n        <article className=\"Home\" >\r\n             <div className=\"number\" >\r\n                <h3>Number of Recipes</h3>\r\n                <div className=\"NumHolder\" >\r\n                {\r\n                    number.map((info,index,array)=>{\r\n                        return(\r\n                            <div>\r\n                                <div>{info}</div>\r\n                            </div>\r\n                        )\r\n                         \r\n                    })\r\n                }\r\n                </div>\r\n            </div>\r\n            <div className=\"Recent\" >\r\n                <h3>Recently published recipes</h3>\r\n                <div className=\"New\" >\r\n                    {recentRecipes.map((info,index,array)=>{\r\n                        return (\r\n                            <div>\r\n                                <h2>{info.Recipe}</h2>\r\n                            </div>\r\n                        )\r\n                    })\r\n\r\n                    }\r\n                   \r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"InfoBoard\" >\r\n                <p>This is a website I developed on my own, \r\n               its goal is to primarily store recipes.\r\n               It comprises of foods and dishes my mother has inherited to me.\r\n               The foods are mostly derive from Mexican heritage with small American touches.  </p>\r\n            </div>\r\n            \r\n        </article>\r\n    )\r\n}\r\n","import React,{useState,useEffect} from 'react'\r\nimport Recipes from '../Local API/Recipes'\r\nimport RecipeDashBoard from './RecipeDashBoard'\r\nimport HomePage from './HomePage'\r\nexport default function SearchBar() {\r\n\r\n    const [Bar, setBar] = useState([])\r\n    const [Info, setInfo] = useState([])\r\n    const [DropMenu, setDropMenu] = useState(false)\r\n\r\n    useEffect(() => {\r\n       if (Bar[0] !== undefined) {\r\n           setDropMenu(true)\r\n       } else {\r\n           setDropMenu(false)\r\n       }\r\n    }, [Bar])\r\n\r\n    const test = e => {\r\n    const ingredient = e.target.value\r\n    const foundRecipes = Recipes.filter((ingredients) =>ingredients.Ingredients.includes(ingredient))\r\n    setBar(foundRecipes)\r\n  };\r\n  const information = (arr) =>{\r\n    const input = document.querySelector(\"input\")\r\n    setInfo([arr])\r\n    setBar([])\r\n    input.value = \"\"\r\n  }\r\n    return (\r\n        <section className=\"SearchBar\" >\r\n            <form onSubmit={(e)=>e.preventDefault() } >\r\n              <svg onClick={()=> console.log(\"Test\")} className=\"Art\" stroke=\"red\" xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 1500 900\" preserveAspectRatio=\"xMidYMid slice\" >\r\n          <path id=\"Pan\"\r\n            fill=\"none\" strokeWidth=\"20\" stroke=\"red\"\r\n        d=\"M 966.08,473.84\r\n           C 927.54,473.49 832.54,472.64 737.00,471.77\r\n             611.22,470.64 484.50,469.50 484.50,469.50\r\n             484.50,469.50 491.00,698.00 504.00,697.00\r\n             504.00,697.00 553.07,721.78 621.00,724.00\r\n             698.23,726.53 799.43,724.55 871.00,724.00\r\n             931.43,723.54 971.99,702.82 963.00,696.00\r\n             963.00,696.00 985.25,576.88 984.42,508.74\r\n             984.30,499.06 1162.48,503.82 1177.18,498.55\r\n             1194.38,492.38 1179.00,475.50 1179.00,475.50\r\n             1179.00,475.50 977.54,473.94 966.08,473.84 Z\" />\r\n            <path id=\"Chicken\"\r\n              fill=\"none\" stroke=\"red\" strokeWidth=\"20\"\r\n        d=\"M 537.82,270.73\r\n           C 537.82,270.73 519.15,276.73 519.15,276.73\r\n             519.15,276.73 528.48,291.73 528.48,291.73\r\n             528.48,291.73 508.82,295.73 508.82,295.73\r\n             508.82,295.73 516.07,308.98 516.07,308.98\r\n             516.07,308.98 536.57,309.73 536.57,309.73\r\n             536.57,309.73 551.32,319.73 551.32,319.73\r\n             551.32,319.73 554.82,352.73 554.82,352.73\r\n             554.82,352.73 555.15,381.73 555.15,381.73\r\n             555.15,381.73 578.82,399.06 578.82,399.06\r\n             578.82,399.06 614.48,413.73 614.82,414.06\r\n             615.15,414.39 656.82,407.39 656.82,407.39\r\n             656.82,407.39 685.15,393.73 685.15,393.73\r\n             685.15,393.73 696.48,371.73 696.48,371.73\r\n             696.48,371.73 680.48,338.73 680.15,338.73\r\n             679.82,338.73 660.48,314.39 660.48,314.39\r\n             660.48,314.39 630.67,300.67 629.67,300.33\r\n             628.67,300.00 602.00,296.00 602.00,296.00\r\n             602.00,296.00 580.48,297.39 580.48,297.39\r\n             580.48,297.39 565.45,301.64 565.45,301.64\r\n             565.45,301.64 548.69,287.48 548.69,287.35\r\n             548.69,287.23 537.82,270.73 537.82,270.73 Z\" />\r\n             <path id=\"Bean\"\r\n        fill=\"none\" stroke=\"red\" strokeWidth=\"20\"\r\n        d=\"M 924.00,278.00\r\n           C 916.15,269.89 901.00,269.00 901.00,269.00\r\n             901.00,269.00 882.32,271.03 874.67,279.67\r\n             866.82,288.53 870.00,304.00 870.00,304.00\r\n             870.00,304.00 873.00,318.55 881.67,324.67\r\n             889.99,330.55 904.00,328.00 904.00,328.00\r\n             904.00,328.00 917.66,326.60 924.67,319.33\r\n             931.14,312.63 931.00,300.00 931.00,300.00\r\n             931.00,300.00 931.12,285.36 924.00,278.00 Z\" />\r\n             <path id=\"Potato\"\r\n        fill=\"none\" stroke=\"red\" strokeWidth=\"20\"\r\n        d=\"M 654.00,115.50\r\n           C 654.00,115.50 618.00,160.50 618.00,160.50\r\n             618.00,160.50 658.50,189.00 658.50,189.00\r\n             658.50,189.00 714.00,160.50 714.00,160.50\r\n             714.00,160.50 654.00,115.50 654.00,115.50 Z\r\n           M 837.00,265.50\" />\r\n        </svg>\r\n             <input placeholder=\"Enter Ingredient\"  onInput={test}></input>\r\n            </form>\r\n            <article className={DropMenu ? \"DropDownMenuOn\":\"DropDownMenuOff\" } >\r\n                {Bar.map((info,index,array)=>{\r\n                    const {Recipe} = info\r\n                    return (\r\n                       <div key={index} onClick={()=>information(array[index])} className=\"RecipeTab\" >{Recipe}</div> \r\n                    )\r\n                })\r\n                    \r\n                }\r\n            </article>\r\n            {Info[0] !== undefined ? <RecipeDashBoard info={Info}/> : <HomePage/>}\r\n            \r\n            \r\n        </section>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport \"./CSS stuff/CSS.css\"\r\nimport RandomSVG from './Components/RandomSVG'\r\nimport SearchBar from './Components/SearchBar'\r\nexport default function Main() {\r\n    const [Loading, setLoading] = useState(false)\r\n    return (\r\n        <main>\r\n            { Loading ? \r\n            <SearchBar/> \r\n            : \r\n            <RandomSVG Loading={Loading} setLoading={setLoading} />\r\n            }\r\n               \r\n        </main>\r\n    )\r\n}\r\n\r\n\r\n\r\nReactDOM.render(<Main/>,document.querySelector(\"#root\"))"],"sourceRoot":""}